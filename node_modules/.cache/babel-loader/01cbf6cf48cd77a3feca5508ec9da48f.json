{"ast":null,"code":"import _slicedToArray from\"C:/Users/laleb/Desktop/FirestReact_Blog-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from\"react\";var useFetch=function useFetch(url){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isPending=_useState4[0],setisPending=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];useEffect(function(){var abortController=new AbortController();setTimeout(function(){fetch(url,{signal:abortController.signal}).then(function(res){if(!res.ok){throw Error('they cant fetch the data ');}return res.json();}).then(function(data){setData(data);setisPending(false);setError(null);}).catch(function(err){if(err.name==='AbortError'){console.log('request canceled');}else{setisPending(false);setError(err.message);}});},1000);return function(){abortController.abort();};},[url]);return{data:data,isPending:isPending,error:error};};export default useFetch;","map":{"version":3,"sources":["C:/Users/laleb/Desktop/FirestReact_Blog-master/src/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isPending","setisPending","error","setError","abortController","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"mappings":"oIAAA,OAASA,QAAT,CAAkBC,SAAlB,KAAmC,OAAnC,CACA,GAAMC,CAAAA,QAAQ,CAAC,QAATA,CAAAA,QAAS,CAACC,GAAD,CAAS,CACpB,cAAwBH,QAAQ,CAAC,IAAD,CAAhC,wCAAOI,IAAP,eAAaC,OAAb,eAEH,eAA8BL,QAAQ,CAAC,IAAD,CAAtC,yCAAMM,SAAN,eAAgBC,YAAhB,eACA,eAAuBP,QAAQ,CAAC,IAAD,CAA/B,yCAAOQ,KAAP,eAAaC,QAAb,eAEGR,SAAS,CAAC,UAAI,CACZ,GAAMS,CAAAA,eAAe,CAAG,GAAIC,CAAAA,eAAJ,EAAxB,CAGEC,UAAU,CAAC,UAAM,CACfC,KAAK,CAACV,GAAD,CAAM,CAAEW,MAAM,CAAEJ,eAAe,CAACI,MAA1B,CAAN,CAAL,CACDC,IADC,CACI,SAAAC,GAAG,CAAI,CACX,GAAG,CAACA,GAAG,CAACC,EAAR,CAAW,CACT,KAAMC,CAAAA,KAAK,CAAC,2BAAD,CAAX,CACD,CACD,MAAOF,CAAAA,GAAG,CAACG,IAAJ,EAAP,CACD,CANC,EAODJ,IAPC,CAOI,SAAAX,IAAI,CAAG,CAEXC,OAAO,CAACD,IAAD,CAAP,CACAG,YAAY,CAAC,KAAD,CAAZ,CACAE,QAAQ,CAAC,IAAD,CAAR,CACD,CAZC,EAYCW,KAZD,CAYO,SAAAC,GAAG,CAAE,CACZ,GAAGA,GAAG,CAACC,IAAJ,GAAW,YAAd,CAA2B,CACzBC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EACD,CAFD,IAEK,CACLjB,YAAY,CAAC,KAAD,CAAZ,CACAE,QAAQ,CAACY,GAAG,CAACI,OAAL,CAAR,CAAuB,CACxB,CAlBC,EAmBD,CApBS,CAoBP,IApBO,CAAV,CAqBA,MAAO,WAAI,CACTf,eAAe,CAACgB,KAAhB,GACD,CAFD,CAKD,CA9BM,CA8BL,CAACvB,GAAD,CA9BK,CAAT,CA+BE,MAAO,CAACC,IAAI,CAAJA,IAAD,CAAME,SAAS,CAATA,SAAN,CAAgBE,KAAK,CAALA,KAAhB,CAAP,CACL,CAtCD,CAuCA,cAAeN,CAAAA,QAAf","sourcesContent":["import { useState,useEffect } from \"react\";\nconst useFetch=(url) => { \n    const [data, setData] = useState(null);\n\n const[isPending,setisPending]=useState(true);\n const [error,setError]=useState(null);\n\n    useEffect(()=>{\n      const abortController = new AbortController();\n\n\n        setTimeout(() => {\n          fetch(url, { signal: abortController.signal })\n        .then(res => { \n          if(!res.ok){\n            throw Error('they cant fetch the data ');\n          }\n          return res.json()\n        })\n        .then(data =>{ \n       \n          setData(data);\n          setisPending(false);\n          setError(null);\n        }).catch(err=>{\n          if(err.name==='AbortError'){\n            console.log('request canceled');\n          }else{\n          setisPending(false);\n          setError(err.message);}\n        })\n        }, 1000);\n        return ()=>{\n          abortController.abort();\n        }\n        \n        \n      },[url]);\n      return {data,isPending,error};\n}\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}