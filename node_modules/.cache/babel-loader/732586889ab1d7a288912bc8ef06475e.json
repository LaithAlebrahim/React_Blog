{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setisPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(url).then(res => {\n        if (!res.ok) {\n          throw Error('they cant detch the data ');\n        }\n\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setisPending(false);\n        setError(null);\n      }).catch(err => {\n        setisPending(false);\n        setError(err.message);\n      });\n    }, 1000);\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"bShOWUYE4yGXCGePWY6+s+AWasc=\");\n\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/laleb/Desktop/dojo-blog/src/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isPending","setisPending","error","setError","setTimeout","fetch","then","res","ok","Error","json","catch","err","message"],"mappings":";;AAAA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;;AACA,MAAMC,QAAQ,GAAEC,GAAD,IAAS;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AAEH,QAAK,CAACM,SAAD,EAAWC,YAAX,IAAyBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAOC,QAAP,IAAiBT,QAAQ,CAAC,IAAD,CAA/B;AAEGC,EAAAA,SAAS,CAAC,MAAI;AACVS,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,KAAK,CAACR,GAAD,CAAL,CACDS,IADC,CACIC,GAAG,IAAI;AACX,YAAG,CAACA,GAAG,CAACC,EAAR,EAAW;AACT,gBAAMC,KAAK,CAAC,2BAAD,CAAX;AACD;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,OANC,EAODJ,IAPC,CAOIR,IAAI,IAAG;AAEXC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OAZC,EAYCQ,KAZD,CAYOC,GAAG,IAAE;AACZX,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAACS,GAAG,CAACC,OAAL,CAAR;AACD,OAfC;AAgBD,KAjBS,EAiBP,IAjBO,CAAV;AAmBD,GApBM,EAoBL,CAAChB,GAAD,CApBK,CAAT;AAqBE,SAAO;AAACC,IAAAA,IAAD;AAAME,IAAAA,SAAN;AAAgBE,IAAAA;AAAhB,GAAP;AACL,CA5BD;;GAAMN,Q;;AA6BN,eAAeA,QAAf","sourcesContent":["import { useState,useEffect } from \"react\";\r\nconst useFetch=(url) => { \r\n    const [data, setData] = useState(null);\r\n\r\n const[isPending,setisPending]=useState(true);\r\n const [error,setError]=useState(null);\r\n\r\n    useEffect(()=>{\r\n        setTimeout(() => {\r\n          fetch(url)\r\n        .then(res => { \r\n          if(!res.ok){\r\n            throw Error('they cant detch the data ');\r\n          }\r\n          return res.json()\r\n        })\r\n        .then(data =>{ \r\n       \r\n          setData(data);\r\n          setisPending(false);\r\n          setError(null);\r\n        }).catch(err=>{\r\n          setisPending(false);\r\n          setError(err.message);\r\n        })\r\n        }, 1000);\r\n        \r\n      },[url]);\r\n      return {data,isPending,error};\r\n}\r\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}