{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setisPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortController = new AbortController();\n    setTimeout(() => {\n      fetch(url, {\n        signal: abortController.signal\n      }).then(res => {\n        if (!res.ok) {\n          throw Error('they cant fetch the data ');\n        }\n\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setisPending(false);\n        setError(null);\n      }).catch(err => {\n        if (err.name === 'AbortError') {\n          console.log('request canceled');\n        }\n\n        setisPending(false);\n        setError(err.message);\n      });\n    }, 1000);\n    return () => {\n      abortController.abort();\n    };\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"bShOWUYE4yGXCGePWY6+s+AWasc=\");\n\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/laleb/Documents/dojo-blog/src/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isPending","setisPending","error","setError","abortController","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"mappings":";;AAAA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;;AACA,MAAMC,QAAQ,GAAEC,GAAD,IAAS;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AAEH,QAAK,CAACM,SAAD,EAAWC,YAAX,IAAyBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAOC,QAAP,IAAiBT,QAAQ,CAAC,IAAD,CAA/B;AAEGC,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMS,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AAGEC,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,KAAK,CAACV,GAAD,EAAM;AAAEW,QAAAA,MAAM,EAAEJ,eAAe,CAACI;AAA1B,OAAN,CAAL,CACDC,IADC,CACIC,GAAG,IAAI;AACX,YAAG,CAACA,GAAG,CAACC,EAAR,EAAW;AACT,gBAAMC,KAAK,CAAC,2BAAD,CAAX;AACD;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,OANC,EAODJ,IAPC,CAOIX,IAAI,IAAG;AAEXC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OAZC,EAYCW,KAZD,CAYOC,GAAG,IAAE;AACZ,YAAGA,GAAG,CAACC,IAAJ,KAAW,YAAd,EAA2B;AACzBC,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;;AACDjB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAACY,GAAG,CAACI,OAAL,CAAR;AACD,OAlBC;AAmBD,KApBS,EAoBP,IApBO,CAAV;AAqBA,WAAO,MAAI;AACTf,MAAAA,eAAe,CAACgB,KAAhB;AACD,KAFD;AAKD,GA9BM,EA8BL,CAACvB,GAAD,CA9BK,CAAT;AA+BE,SAAO;AAACC,IAAAA,IAAD;AAAME,IAAAA,SAAN;AAAgBE,IAAAA;AAAhB,GAAP;AACL,CAtCD;;GAAMN,Q;;AAuCN,eAAeA,QAAf","sourcesContent":["import { useState,useEffect } from \"react\";\r\nconst useFetch=(url) => { \r\n    const [data, setData] = useState(null);\r\n\r\n const[isPending,setisPending]=useState(true);\r\n const [error,setError]=useState(null);\r\n\r\n    useEffect(()=>{\r\n      const abortController = new AbortController();\r\n\r\n\r\n        setTimeout(() => {\r\n          fetch(url, { signal: abortController.signal })\r\n        .then(res => { \r\n          if(!res.ok){\r\n            throw Error('they cant fetch the data ');\r\n          }\r\n          return res.json()\r\n        })\r\n        .then(data =>{ \r\n       \r\n          setData(data);\r\n          setisPending(false);\r\n          setError(null);\r\n        }).catch(err=>{\r\n          if(err.name==='AbortError'){\r\n            console.log('request canceled');\r\n          }\r\n          setisPending(false);\r\n          setError(err.message);\r\n        })\r\n        }, 1000);\r\n        return ()=>{\r\n          abortController.abort();\r\n        }\r\n        \r\n        \r\n      },[url]);\r\n      return {data,isPending,error};\r\n}\r\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}