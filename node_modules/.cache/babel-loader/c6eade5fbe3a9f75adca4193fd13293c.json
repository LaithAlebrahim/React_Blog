{"ast":null,"code":"import _slicedToArray from\"C:/Users/laleb/Desktop/FirestReact_Blog-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import{useHistory}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Create=function Create(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),author=_useState4[0],setAuthor=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),Body=_useState6[0],setBody=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isPending=_useState8[0],setPending=_useState8[1];var history=useHistory();var handleSubmit=function handleSubmit(e){e.preventDefault();var blog={title:title,Body:Body,author:author};setPending(true);fetch('http://localhost:8000/blogs',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(blog)}).then(function(){console.log('Blog Created');setPending(false);//   history.go(-1);\nhistory.push('/');});};return/*#__PURE__*/_jsxs(\"div\",{className:\"create\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add New Blog\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Blog Title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",required:true,value:title,onChange:function onChange(e){return setTitle(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{children:\"Blog Body:\"}),/*#__PURE__*/_jsx(\"textarea\",{required:true,value:Body,onChange:function onChange(e){return setBody(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{children:\"Author Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",required:true,value:author,onChange:function onChange(e){return setAuthor(e.target.value);}}),!isPending&&/*#__PURE__*/_jsx(\"button\",{children:\"Add Blog\"}),isPending&&/*#__PURE__*/_jsx(\"button\",{disabled:true,children:\"Adding Blog....\"})]})]});};export default Create;","map":{"version":3,"sources":["C:/Users/laleb/Desktop/FirestReact_Blog-master/src/Create.js"],"names":["useState","useHistory","Create","title","setTitle","author","setAuthor","Body","setBody","isPending","setPending","history","handleSubmit","e","preventDefault","blog","fetch","method","headers","body","JSON","stringify","then","console","log","push","target","value"],"mappings":"oIAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,UAAT,KAA2B,kBAA3B,C,wFACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjB,cAAuBF,QAAQ,CAAC,EAAD,CAA/B,wCAAOG,KAAP,eAAaC,QAAb,eACA,eAAyBJ,QAAQ,CAAC,EAAD,CAAjC,yCAAOK,MAAP,eAAcC,SAAd,eACA,eAAqBN,QAAQ,CAAC,EAAD,CAA7B,yCAAOO,IAAP,eAAYC,OAAZ,eACA,eAA4BR,QAAQ,CAAC,KAAD,CAApC,yCAAMS,SAAN,eAAgBC,UAAhB,eACA,GAAMC,CAAAA,OAAO,CAACV,UAAU,EAAxB,CAEI,GAAMW,CAAAA,YAAY,CAAC,QAAbA,CAAAA,YAAa,CAACC,CAAD,CAAK,CACpBA,CAAC,CAACC,cAAF,GACA,GAAMC,CAAAA,IAAI,CAAC,CAACZ,KAAK,CAALA,KAAD,CAAOI,IAAI,CAAJA,IAAP,CAAYF,MAAM,CAANA,MAAZ,CAAX,CACAK,UAAU,CAAC,IAAD,CAAV,CACAM,KAAK,CAAC,6BAAD,CAA+B,CAChCC,MAAM,CAAC,MADyB,CAEhCC,OAAO,CAAC,CACJ,eAAe,kBADX,CAFwB,CAOhCC,IAAI,CAACC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAP2B,CAA/B,CAAL,CAQGO,IARH,CAQQ,UAAI,CACRC,OAAO,CAACC,GAAR,CAAY,cAAZ,EACAd,UAAU,CAAC,KAAD,CAAV,CACH;AACAC,OAAO,CAACc,IAAR,CAAa,GAAb,EACA,CAbD,EAeH,CAnBD,CAqBJ,mBACJ,aAAK,SAAS,CAAC,QAAf,wBACI,oCADJ,cAEI,cAAM,QAAQ,CAAEb,YAAhB,wBACI,qCADJ,cAEI,cAAO,IAAI,CAAC,MAAZ,CAAkB,QAAQ,KAA1B,CAA2B,KAAK,CAAET,KAAlC,CAAyC,QAAQ,CAAE,kBAACU,CAAD,QAAKT,CAAAA,QAAQ,CAACS,CAAC,CAACa,MAAF,CAASC,KAAV,CAAb,EAAnD,EAFJ,cAGI,qCAHJ,cAII,iBAAU,QAAQ,KAAlB,CAAmB,KAAK,CAAEpB,IAA1B,CAAgC,QAAQ,CAAE,kBAAAM,CAAC,QAAEL,CAAAA,OAAO,CAACK,CAAC,CAACa,MAAF,CAASC,KAAV,CAAT,EAA3C,EAJJ,cAOI,uCAPJ,cAQI,cAAO,IAAI,CAAC,MAAZ,CAAmB,QAAQ,KAA3B,CAA4B,KAAK,CAAEtB,MAAnC,CAA2C,QAAQ,CAAE,kBAACQ,CAAD,QAAKP,CAAAA,SAAS,CAACO,CAAC,CAACa,MAAF,CAASC,KAAV,CAAd,EAArD,EARJ,CAUI,CAAClB,SAAD,eAAa,oCAVjB,CAWIA,SAAS,eAAG,eAAQ,QAAQ,KAAhB,6BAXhB,GAFJ,GADI,CAoBH,CAhDD,CAkDA,cAAeP,CAAAA,MAAf","sourcesContent":["import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nconst Create = () => {\n    const [title,setTitle]=useState('');\n    const [author,setAuthor]=useState('');\n    const [Body,setBody]=useState('');\n    const[isPending,setPending]=useState(false);\n    const history=useHistory();\n\n        const handleSubmit=(e)=>{\n            e.preventDefault();\n            const blog={title,Body,author};\n            setPending(true);\n            fetch('http://localhost:8000/blogs',{\n                method:'POST',\n                headers:{\n                    'Content-Type':'application/json'\n                  \n                },\n                \n                body:JSON.stringify(blog)\n            }).then(()=>{\n                console.log('Blog Created');\n                setPending(false);\n             //   history.go(-1);\n             history.push('/');\n            })\n           \n        }\n\n    return (\n<div className=\"create\">\n    <h2>Add New Blog</h2>\n    <form onSubmit={handleSubmit}>\n        <label >Blog Title</label>\n        <input type=\"text\"required value={title} onChange={(e)=>setTitle(e.target.value)}/>\n        <label >Blog Body:</label>\n        <textarea required value={Body} onChange={e=>setBody(e.target.value)}>\n\n        </textarea>\n        <label >Author Name:</label>\n        <input type=\"text\" required value={author} onChange={(e)=>setAuthor(e.target.value)}/>\n        \n       {!isPending&& <button>Add Blog</button>}\n       {isPending&& <button disabled>Adding Blog....</button>}\n\n    </form>\n</div>\n\n      );\n}\n \nexport default Create;"]},"metadata":{},"sourceType":"module"}